{"ast":null,"code":"import { FETCH_FAIL, FETCH_START, FETCH_SUCCESS } from \"../action/index\";\nconst initialState = {\n  data: null,\n  isFetching: false,\n  error: null\n};\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    /* case fetch start - toggle isFetching to true*/\n    case FETCH_START:\n      return { ...state,\n        isFetching: true\n      };\n\n    /* case fetch success \n     - store action.payload in data\n     - toggle isFetching to false */\n\n    case FETCH_SUCCESS:\n      return { ...state,\n        data: action.payload,\n        isFetching: false\n      };\n\n    /* case fetch fail \n    - store action.payload in error\n    - toggle isFetching to false */\n\n    case FETCH_FAIL:\n      return { ...state,\n        isFetching: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/fred/Github/web-module-project-async-redux/app-async-redux/src/reducer/index.js"],"names":["FETCH_FAIL","FETCH_START","FETCH_SUCCESS","initialState","data","isFetching","error","reducer","state","action","type","payload"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,WAArB,EAAkCC,aAAlC,QAAuD,iBAAvD;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,IADa;AAEnBC,EAAAA,UAAU,EAAE,KAFO;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE;AACA,SAAKT,WAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELH,QAAAA,UAAU,EAAE;AAFP,OAAP;;AAKF;AACJ;AACA;;AACI,SAAKH,aAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELJ,QAAAA,IAAI,EAAEK,MAAM,CAACE,OAFR;AAGLN,QAAAA,UAAU,EAAE;AAHP,OAAP;;AAMF;AACJ;AACA;;AACI,SAAKL,UAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELH,QAAAA,UAAU,EAAE,KAFP;AAGLC,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAHT,OAAP;;AAKF;AACE,aAAOH,KAAP;AA5BJ;AA8BD,CA/BM","sourcesContent":["import { FETCH_FAIL, FETCH_START, FETCH_SUCCESS } from \"../action/index\";\nconst initialState = {\n  data: null,\n  isFetching: false,\n  error: null,\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    /* case fetch start - toggle isFetching to true*/\n    case FETCH_START:\n      return {\n        ...state,\n        isFetching: true,\n      };\n\n    /* case fetch success \n     - store action.payload in data\n     - toggle isFetching to false */\n    case FETCH_SUCCESS:\n      return {\n        ...state,\n        data: action.payload,\n        isFetching: false,\n      };\n\n    /* case fetch fail \n    - store action.payload in error\n    - toggle isFetching to false */\n    case FETCH_FAIL:\n      return {\n        ...state,\n        isFetching: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}