{"ast":null,"code":"import { FETCH_FAIL, FETCH_START, FETCH_SUCCESS } from \"../action/index\";\nconst initialState = {\n  loading: false,\n  data: null,\n  isFetching: false,\n  error: null\n};\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    /* case fetch start - toggle isFetching to true*/\n    case FETCH_START:\n      return { ...state,\n        isFetching: true\n      };\n\n    /* case fetch success  - store action.payload in data*/\n\n    case FETCH_SUCCESS:\n      return { ...state,\n        data: action.payload,\n        isFetching: false\n      };\n\n    /* case fetch fail - store action.payload in error*/\n\n    case FETCH_FAIL:\n      return { ...state,\n        isFetching: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/fred/Github/web-module-project-async-redux/app-async-redux/src/reducer/index.js"],"names":["FETCH_FAIL","FETCH_START","FETCH_SUCCESS","initialState","loading","data","isFetching","error","reducer","state","action","type","payload"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,WAArB,EAAkCC,aAAlC,QAAuD,iBAAvD;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,IAAI,EAAE,IAFa;AAGnBC,EAAAA,UAAU,EAAE,KAHO;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE;AACA,SAAKV,WAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELH,QAAAA,UAAU,EAAE;AAFP,OAAP;;AAKF;;AACA,SAAKJ,aAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELJ,QAAAA,IAAI,EAAEK,MAAM,CAACE,OAFR;AAGLN,QAAAA,UAAU,EAAE;AAHP,OAAP;;AAMF;;AACA,SAAKN,UAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELH,QAAAA,UAAU,EAAE,KAFP;AAGLC,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAHT,OAAP;;AAKF;AACE,aAAOH,KAAP;AAxBJ;AA0BD,CA3BM","sourcesContent":["import { FETCH_FAIL, FETCH_START, FETCH_SUCCESS } from \"../action/index\";\nconst initialState = {\n  loading: false,\n  data: null,\n  isFetching: false,\n  error: null,\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    /* case fetch start - toggle isFetching to true*/\n    case FETCH_START:\n      return {\n        ...state,\n        isFetching: true,\n      };\n\n    /* case fetch success  - store action.payload in data*/\n    case FETCH_SUCCESS:\n      return {\n        ...state,\n        data: action.payload,\n        isFetching: false,\n      };\n\n    /* case fetch fail - store action.payload in error*/\n    case FETCH_FAIL:\n      return {\n        ...state,\n        isFetching: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}